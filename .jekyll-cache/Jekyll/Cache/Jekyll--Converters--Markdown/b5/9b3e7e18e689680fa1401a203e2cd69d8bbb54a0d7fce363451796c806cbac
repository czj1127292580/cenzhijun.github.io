I"/<h2 id="mac远程登录到iphone">Mac远程登录到iPhone</h2>

<ul>
  <li>我们经常在Mac的终端上，通过敲一些命令行来完成一些操作</li>
</ul>

<p><img src="http://otogtitz7.bkt.clouddn.com/2018-01-21-Terminal.png" alt="Termina" /></p>

<ul>
  <li>iOS和Mac OS X都是基于Darwin（苹果的一个基于Unix的开源系统内核），所以iOS中同样支持终端的命令行操作</li>
  <li>在逆向工程中，我们经常会通过命令行来操纵iPhone</li>
  <li>为了能够让Mac终端中的命令行能作用在iPhone上，我们得让Mac和iPhone建立连接</li>
  <li>通过Mac远程登录到iPhone的方式建立连接
<img src="http://otogtitz7.bkt.clouddn.com/2018-01-21-mac-iphone.jpg" alt="mac-iphone" /></li>
</ul>

<h2 id="sshopenssh">SSH、OpenSSH</h2>
<ul>
  <li>SSH
    <ul>
      <li>Secure Shell的缩写，意为“安全外壳协议”，是一种可以为远程登录提供安全保障的协议</li>
      <li>使用SSH，可以把所有传输的数据进行加密，“中间人”攻击方式就不可能实现，能防止DNS欺骗和IP欺骗
<img src="http://otogtitz7.bkt.clouddn.com/2018-01-21-ssh-sniffer.png" alt="ssh-sniffe" /></li>
    </ul>
  </li>
  <li>OpenSSH
    <ul>
      <li>是SSH协议的免费开源实现</li>
      <li>可以通过OpenSSH的方式让Mac远程登录到iPhone</li>
    </ul>
  </li>
</ul>

<h2 id="使用openssh远程登录">使用OpenSSH远程登录</h2>
<ul>
  <li>在iPhone上通过Cydia安装OpenSSH工具（软件源http://apt.saurik.com）</li>
</ul>

<p><img src="http://otogtitz7.bkt.clouddn.com/2018-01-21-OpenSSH.png" alt="OpenSSH" /></p>

<ul>
  <li>OpenSSH的具体使用步骤可以查看Description中的描述</li>
</ul>

<p><img src="http://otogtitz7.bkt.clouddn.com/2018-01-21-OpenSSH-desc.png" alt="OpenSSH-des" /></p>

<ul>
  <li>初次使用步骤
    <ul>
      <li>SSH是通过TCP协议通信，所以要确保Mac和iPhone在同一局域网下，比如连接着同一个WiFi</li>
      <li>在Mac的终端输入<code class="language-plaintext highlighter-rouge">ssh root@服务器主机地址</code>，比如<code class="language-plaintext highlighter-rouge">ssh root@10.1.1.168</code>（这里的服务器是手机）</li>
      <li>初始密码<code class="language-plaintext highlighter-rouge">alpine</code></li>
      <li>登录成功后就可以使用终端命令行操作iPhone</li>
      <li>退出登录命令是<code class="language-plaintext highlighter-rouge">exit</code></li>
    </ul>

    <p><img src="http://otogtitz7.bkt.clouddn.com/2018-01-21-login_handle_step.png" alt="login_handle_step" /></p>
  </li>
</ul>

<h2 id="root和mobile">root和mobile</h2>
<ul>
  <li>iOS下有2个常用账户：<code class="language-plaintext highlighter-rouge">root</code>、<code class="language-plaintext highlighter-rouge">mobile</code>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">root</code>：最高权限账户，$HOME是<code class="language-plaintext highlighter-rouge">/var/root</code></li>
      <li><code class="language-plaintext highlighter-rouge">mobile</code>：普通权限账户，只能操作一些普通文件，不能操作系统级别的文件，$HOME是<code class="language-plaintext highlighter-rouge">/var/mobile</code></li>
      <li>登录mobile用户：<code class="language-plaintext highlighter-rouge">root mobile@服务器主机地址</code></li>
      <li>root和mobile用户的初始登录密码都是<code class="language-plaintext highlighter-rouge">alpine</code></li>
    </ul>

    <p><img src="http://otogtitz7.bkt.clouddn.com/2018-01-21-modify_passwd.png" alt="modify_passwd" /></p>
  </li>
</ul>

<h2 id="ssh的安全验证方式">SSH的安全验证方式</h2>
<ul>
  <li>SSH提供了2种方式的安全验证
    <ul>
      <li>基于口令的安全验证
        <ul>
          <li>使用帐号和口令即可验证（口令就是密码）</li>
        </ul>
      </li>
      <li>基于密钥的安全验证
        <ul>
          <li>免口令验证</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h4 id="ssh---基于密钥的安全验证">SSH - 基于密钥的安全验证</h4>

<p><img src="http://otogtitz7.bkt.clouddn.com/2018-01-21-flow_chart.png" alt="flow_chart" /></p>

<h6 id="在客户端生成一对相关联的密钥key-pair一个公钥public-key一个私钥private-key">在客户端生成一对相关联的密钥（Key Pair）：一个公钥（Public Key），一个私钥（Private Key）</h6>
<ul>
  <li>怎么生成公钥和私钥</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh-copy-id root@服务器主机地址
</code></pre></div></div>
<blockquote>
  <p>一路敲回车键（Enter）即可
生成的公钥：<code class="language-plaintext highlighter-rouge">~/.ssh/id_rsa.pub</code>
生成的私钥：<code class="language-plaintext highlighter-rouge">~/.ssh/id_rsa</code></p>
</blockquote>

<h6 id="把客户端的公钥内容追加到服务器的授权文件sshauthorized_keys尾部">把客户端的公钥内容追加到服务器的授权文件（~/.ssh/authorized_keys）尾部</h6>
<ul>
  <li>怎么追加</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh-copy-id root@服务器主机地址
</code></pre></div></div>

<blockquote>
  <p>需要输入root用户的登录密码
<code class="language-plaintext highlighter-rouge">ssh-copy-id</code>会将客户端<code class="language-plaintext highlighter-rouge">~/.ssh/id_rsa.pub</code>的内容自动追加到服务器的<code class="language-plaintext highlighter-rouge">~/.ssh/authorized_keys</code>尾部</p>
</blockquote>

<ul>
  <li>整个过程使用RSA非对称加密算法（公钥进行加密、私钥进行解密）保证安全性</li>
  <li>注意：由于是在~文件夹下操作，所以上述操作仅仅是解决了root用户的登录问题（不会影响mobile用户）</li>
</ul>

<h2 id="公钥-授权文件">公钥 » 授权文件</h2>
<ul>
  <li>可以使用ssh-copy-id将客户端的公钥内容自动追加到服务器的授权文件尾部，也可以手动操作
    <ul>
      <li>复制客户端的公钥到服务器某路径
        <ul>
          <li><code class="language-plaintext highlighter-rouge">scp ~/.ssh/id_rsa.pub root@服务器主机地址:~</code></li>
          <li><code class="language-plaintext highlighter-rouge">scp</code>是secure copy的缩写，是基于SSH登录进行安全的远程文件拷贝命令，把一个文件copy到远程另外一台主机上</li>
          <li>上面的命令行将客户端的<code class="language-plaintext highlighter-rouge">~/.ssh/id_rsa.pub</code>拷贝到了服务器的~地址</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>SSH登录服务器
    <ul>
      <li><code class="language-plaintext highlighter-rouge">ssh root@服务器主机地址</code></li>
      <li>需要输入<code class="language-plaintext highlighter-rouge">root</code>用户的登录密码</li>
    </ul>
  </li>
  <li>在服务器创建.ssh文件夹
    <ul>
      <li><code class="language-plaintext highlighter-rouge">mkdir .ssh</code></li>
    </ul>
  </li>
  <li>追加公钥内容到授权文件尾部
    <ul>
      <li><code class="language-plaintext highlighter-rouge">cat ~/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</code></li>
    </ul>
  </li>
  <li>删除公钥
    <ul>
      <li><code class="language-plaintext highlighter-rouge">rm ~/id_rsa.pub</code></li>
    </ul>
  </li>
</ul>

<h2 id="sslopenssl">SSL、OpenSSL</h2>

<p>很多人会将SSH、OpenSSH、SSL、OpenSSL搞混</p>

<ul>
  <li>SSL
    <ul>
      <li>Secure Sockets Layer的缩写，是为网络通信提供安全及数据完整性的一种安全协议，在传输层对网络连接进行加密</li>
    </ul>
  </li>
  <li>OpenSSL
    <ul>
      <li>SSL的开源实现</li>
      <li>绝大部分HTTPS请求等价于：HTTP + OpenSSL</li>
    </ul>
  </li>
</ul>

<h4 id="openssh的加密就是通过openssl完成的">OpenSSH的加密就是通过OpenSSL完成的</h4>

<h2 id="通过usb进行ssh登录">通过USB进行SSH登录</h2>

<p>默认情况下，由于SSH走的是TCP协议，Mac是通过网络连接的方式SSH登录到iPhone，要求iPhone连接WiFi。</p>

<p>为了加快传输速度，也可以通过USB连接的方式进行SSH登录。</p>

<ul>
  <li>Mac上有个服务程序usbmuxd（它会开机自动启动），可以实现USB进行SSH登陆</li>
  <li><code class="language-plaintext highlighter-rouge">/System/Library/PrivateFrameworks/MobileDevice.framework/Resources/usbmuxd</code></li>
</ul>

<h2 id="22端口">22端口</h2>

<p>端口就是设备对外提供服务的窗口，每个端口都有个端口号（范围是0~65535，共2^16个）</p>

<p>有些端口号是保留的，已经规定了用途，比如:</p>

<ul>
  <li>21端口提供FTP服务</li>
  <li>80端口提供HTTP服务</li>
  <li>22端口提供SSH服务</li>
  <li>更多保留端口号： https://baike.baidu.com/item/%E7%AB%AF%E5%8F%A3%E5%8F%B7/10883658#4_3</li>
</ul>

<h4 id="iphone默认是使用22端口进行ssh通信采用的是tcp协议">iPhone默认是使用22端口进行SSH通信，采用的是TCP协议</h4>

<p><img src="http://otogtitz7.bkt.clouddn.com/2018-01-21-wifi_ssh_login.png" alt="wifi_ssh_login" /></p>

<h2 id="usbmuxd的使用1">usbmuxd的使用1</h2>

<ul>
  <li>下载usbmuxd工具包（下载v1.0.8版本，主要用到里面的一个python脚本：tcprelay.py）</li>
  <li>https://cgit.sukimashita.com/usbmuxd.git/snapshot/usbmuxd-1.0.8.tar.gz</li>
  <li>将iPhone的22端口（SSH端口）映射到Mac本地的10010端口</li>
  <li><code class="language-plaintext highlighter-rouge">cd ~/Downloads/usbmuxd-1.0.8/python-client</code></li>
  <li><code class="language-plaintext highlighter-rouge">python tcprelay.py 22:10010</code>
    <h4 id="注意要想保持端口转换状态不能终止此命令行如果要执行其他终端命令行请新开一个终端界面">注意：要想保持端口转换状态，不能终止此命令行（如果要执行其他终端命令行，请新开一个终端界面）</h4>
  </li>
  <li>不一定非要10010端口，只要不是保留端口就行</li>
</ul>

<h2 id="usbmuxd的使用2">usbmuxd的使用2</h2>
<p>端口映射完毕后，以后如果想跟iPhone的22端口通信，直接跟Mac本地的10010端口通信就可以了</p>

<ul>
  <li>新开一个终端界面，SSH登录到Mac本地的10010端口（以下方式2选1）</li>
  <li><code class="language-plaintext highlighter-rouge">ssh root@localhost -p 10010</code></li>
  <li>ssh root@127.0.0.1 -p 10010</li>
  <li>localhost是一个域名，指向的IP地址是127.0.0.1，本机虚拟网卡的IP地址</li>
  <li>usbmuxd会将Mac本地10010端口的TCP协议数据，通过USB连接转发到iPhone的22端口</li>
</ul>

<p><img src="http://otogtitz7.bkt.clouddn.com/2018-01-21-usb_ssh_login.png" alt="usb_ssh_login" /></p>

<h2 id="ios终端的中文乱码问题">iOS终端的中文乱码问题</h2>

<p>默认情况下，iOS终端不支持中文输入和显示</p>

<p>解决方案：新建一个~/.inputrc文件，文件内容是：</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">set convert-meta off </code>(不将中文字符转化为转义序列)</li>
  <li><code class="language-plaintext highlighter-rouge">set output-meta on</code>(允许向终端输出中文)</li>
  <li><code class="language-plaintext highlighter-rouge">set meta-flag on </code>（允许向终端输入中文）</li>
  <li><code class="language-plaintext highlighter-rouge">set input-meta on</code>（允许向终端输入中文）</li>
</ul>

<h4 id="如果是想在终端编辑文件内容可以通过cydia安装一个vim软件源httpaptsaurikcom">如果是想在终端编辑文件内容，可以通过Cydia安装一个vim（软件源http://apt.saurik.com）</h4>

<p><img src="http://otogtitz7.bkt.clouddn.com/2018-01-21-vim_improved.png" alt="vim_improved" /></p>

:ET